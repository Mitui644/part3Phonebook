{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","personsExports","getAll","axios","get","then","response","data","create","person","post","remove","id","delete","update","put","Filter","text","callBack","value","onChange","PersonForm","submitCallBack","nameCallback","numberCallback","name","number","onSubmit","type","Persons","persons","deleteCallback","map","onClick","Notification","notification","message","className","isError","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","searchString","setSearchString","setNotification","showNotification","setTimeout","useEffect","personService","responseData","filteredPersons","filter","toLowerCase","includes","event","target","preventDefault","existingPerson","find","obj","window","confirm","updatedPerson","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bda699fa.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = 'api/persons'\n\nconst getAll = () => {\n    return axios.get(baseUrl).then(response => response.data)\n}\n  \nconst create = (person) => {\n    return axios.post(baseUrl, person).then(response => response.data)\n}\n\nconst remove = (id) => {\n    return axios.delete(baseUrl + '/' + id)\n}\n\nconst update = (person) => {\n    return axios.put(baseUrl + '/' + person.id, person).then(response => response.data)\n}\nconst personsExports = {getAll, create, remove, update}\nexport default personsExports\n","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst Filter = ({ text, callBack}) => (\n  <div>\n  filter shown with<input value={text} onChange={callBack}/>\n</div>\n)\n\nconst PersonForm = ({ submitCallBack, nameCallback, numberCallback, name, number}) => (\n  <form onSubmit={submitCallBack}>\n  <div>\n    name: <input value={name} onChange={nameCallback}/>\n  </div>\n  <div>\n    number: <input value={number} onChange={numberCallback}/>\n  </div>\n  <div>\n    <button type=\"submit\">add</button>\n  </div>\n  </form>\n)\n\nconst Persons = ({ persons, deleteCallback }) => (\n  persons.map(person => \n  <p key={person.id}>\n    {person.name} {person.number} <button onClick={() => deleteCallback(person.id, person.name)}>delete</button>\n  </p>\n  )\n)\n\nconst Notification = ({ notification }) => {\n  if (notification.message === null) {\n    return null\n  }\n\n  const className = notification.isError ? \"error\" : \"note\"\n  return (\n    <div className={className}>\n      {notification.message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchString, setSearchString ] = useState('')\n  const [notification, setNotification] = useState({message: null, isError: false})\n\n  const showNotification = (message, isError) => {\n    setNotification({message, isError})\n    setTimeout(() => {\n      setNotification({message: null, isError: false})\n    }, 5000)\n  }\n  \n  useEffect(() => {\n    personService\n      .getAll()\n      .then(responseData => {\n        setPersons(responseData)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const existingPerson = persons.find(obj => obj.name === newName)\n\n    if(existingPerson && window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n      const updatedPerson = { ...existingPerson, number: newNumber}\n      personService\n      .update(updatedPerson)\n      .then(responseData => {\n        setPersons(persons.map(person => person.id !== existingPerson.id ? person : responseData))\n        setNewName('')\n        setNewNumber('')\n        showNotification(`Updated ${newName}`, false)\n      })\n      .catch(error => {\n        showNotification(`${error.response.data.error}`, true)\n        // showNotification(`Information of ${newName} has already been removed from server`, true)\n        // setPersons(persons.filter(person => person.id !== existingPerson.id))\n      })\n    } else if(!existingPerson) {\n      const person = { name: newName, number: newNumber } \n      personService\n      .create(person)\n      .then(responseData => {\n        setPersons(persons.concat(responseData))\n        setNewName('')\n        setNewNumber('')\n        showNotification(`Added ${newName}`, false)\n      })\n      .catch(error => {\n        showNotification(`${error.response.data.error}`, true)\n      })\n    }\n  }\n\n  const removePerson = (id, name) => {\n    const message = `Delete ${name} ?`\n    const result = window.confirm(message);\n    if(result) {\n      personService\n      .remove(id).then(() => {\n        setPersons(persons.filter(person => person.id !== id))\n      })\n      showNotification(`Removed ${name}`, false)\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchStringChange = (event) => {\n    setSearchString(event.target.value)\n  }\n\n  const filteredPersons = persons.filter(person => {\n    return person.name.toLowerCase().includes(searchString.toLowerCase())\n  })\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification notification={notification} />\n\n      <Filter text={searchString} callBack={handleSearchStringChange}/>\n\n      <h3>add a new</h3>\n\n      <PersonForm submitCallBack={addPerson} nameCallback={handleNameChange} numberCallback={handleNumberChange} name={newName} number={newNumber}/>\n\n      <h3>Numbers</h3>\n\n      <Persons persons={filteredPersons} deleteCallback={removePerson}/>\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}